{"version":3,"sources":["Card.js","CardList.js","Scrollable.js","Searchbox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","Scrollable","props","style","overflowY","border","height","children","Searchbox","searchFilter","type","placeholder","onChange","App","onSearchFilter","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAEtB,OACI,0BAASC,UAAU,sDAAnB,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,qBAAiDG,IAAI,KAC7D,gCACI,6BAAKL,IACL,4BAAIC,WCQLK,EAdE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BACGA,EAAOC,KAAI,SAACC,EAAKP,GACZ,OACM,cAAC,EAAD,CAEIF,KAAMO,EAAOL,GAAIF,KACjBE,GAAIK,EAAOL,GAAIA,GACfD,MAAOM,EAAOL,GAAID,OAHbM,EAAOL,GAAIA,UCE3BQ,EATI,SAACC,GAChB,OACI,qBAAKC,MAAS,CAACC,UAAU,SAAUC,OAAO,4BAC1CC,OAAQ,SADR,SAESJ,EAAMK,YCWRC,EAfG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACG,qBAAKf,UAAU,MAAf,SACP,uBAAOA,UAAU,wCACbgB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OC+CCI,G,wDAhDX,aAAc,IAAD,8BACT,gBAiBRC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAjBrC,EAAKC,MAAQ,CACTtB,OAAQ,GACRmB,YAAa,IAJR,E,gEASG,IAAD,OACXI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAK,EAAKT,SAAS,CAAClB,OAAQ2B,S,+BAUlC,IAAD,EAC0BC,KAAKN,MAA5BtB,EADH,EACGA,OAAQmB,EADX,EACWA,YACbU,EAAiB7B,EAAO8B,QAAO,SAAA9B,GACjC,OAAOA,EAAOP,KAAKsC,cAAcC,SAASb,EAAYY,kBAMtD,OAIC,sBAAKnC,UAAU,KAAf,UACK,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWe,aAAciB,KAAKZ,iBAEhC,cAAC,EAAD,UACK,cAAC,EAAD,CAAUhB,OAAQ6B,a,GAzCjBI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fe7fcd36.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({name,email,id}) => {\r\n\r\n    return (\r\n        <section className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-3'>\r\n            <img src={`https://robohash.org/${id}.png?size=200x200`} alt=''/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        <div>\r\n         { robots.map((user,id) =>{ \r\n                return(\r\n                      <Card\r\n                          key={robots[id].id} \r\n                          name={robots[id].name} \r\n                          id={robots[id].id}  \r\n                          email={robots[id].email} /> \r\n    )})}\r\n    </div>);\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\n\r\nconst Scrollable = (props) => {\r\n    return ( \r\n        <div style = {{overflowY:'scroll', border:'1px solid rgb(2, 27, 255)', \r\n        height: '500px'}}>\r\n                {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scrollable\r\n","import React from 'react'\r\n\r\nconst Searchbox = ({searchFilter}) => {\r\n    return (\r\n       <div className='pd2'>\r\n<input className='pa3 ba b--green bg-light-blue br3 ma4'\r\n    type='search'\r\n    placeholder='Search Robots'\r\n    onChange={searchFilter}> \r\n    \r\n \r\n \r\n </input>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Searchbox\r\n","import React, {Component} from 'react'\r\nimport CardList from './CardList'\r\nimport Scrollable from './Scrollable'\r\nimport Searchbox from './Searchbox'\r\nimport './App.css'\r\n\r\nclass App extends Component  {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n\r\ncomponentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users =>  this.setState({robots: users})\r\n        );\r\n\r\n}\r\n\r\n\r\nonSearchFilter = (event) => {\r\n    this.setState({searchfield: event.target.value})\r\n}\r\n\r\n    render(){\r\n        const {robots, searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robots => {\r\n        return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\r\n\r\n    })\r\n\r\n\r\n        return (\r\n\r\n\r\n            \r\n         <div className='tc'>\r\n              <h1 className='f2'>RoboFriends</h1>\r\n              <Searchbox searchFilter={this.onSearchFilter}/>\r\n\r\n            <Scrollable>\r\n                 <CardList robots={filteredRobots}/>\r\n            </Scrollable>\r\n         </div>\r\n    \r\n      );\r\n    }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}